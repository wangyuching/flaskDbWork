1
Flask:Python Web 應用框架，用來建立 Web 伺服器和處理 HTTP 請求。
▼ 以下皆為Flask所提供
request:取得用戶端送來的 HTTP 資料（如表單、查詢參數、檔案等）。
session:儲存多個請求之間的資料（例如登入狀態），資料會儲存在瀏覽器的 Cookie 中。
render_template:用來渲染（產生）HTML 模板，並回傳給用戶端。
redirect:將用戶端重新導向到另一個 URL。
url_for:根據函式名稱產生對應的 URL，方便管理路由。

2 時間模組
3 資料庫模組

5 建立一個 Flask 應用程式的實例。
6 設定 Flask 應用的「密鑰」，主要用於加密 session。越亂越好。

8 物件db = 使用 dataset 套件連接一個 SQLite 資料庫，檔案名稱為 file.db。透過 db 這個物件來操作資料庫。
9 物件table = 取得或建立資料庫中的 userplay 這個資料表（table）。透過 table 這個物件來操作 userplay 資料表。

11-13 讓使用者進入首頁時，顯示 index.html 畫面。
當使用者用 GET 方法瀏覽網站首頁 / 時，會執行函式 login ，並回傳 index.html 這個模板頁面。

15-28 驗證使用者輸入的名稱，並將資料暫存進session，準備進入wp.html。
15-16 使用者在index.html填寫表單並按下「Submit」按鈕後，資料以 POST 方法送到 /submit 這個路徑，並執行函式 submit。
17 字串 time = 模組.類別.靜態方式:取得目前的日期和時間.把日期時間格式化成字串 (年-月-日 時:分:秒)。
18 字串 name = 從index.html的form表單取得使用者輸入的 name。
20-21 如果name的長度等於 0，會重新載入 index.html 頁面，並顯示hint !!!NAME!!!。
23 用來檢查名稱是否已經被使用。
字串 exist = 在資料表 userplay 中查詢是否有欄位 n 的值等於 name 的紀錄。
如果找到，exist 會是該筆資料（字典）；如果沒找到，exist 會是 None。
24-25 如果exist有東西（exist 不為 None），就會重新載入 index.html 頁面，並顯示hint !!!名稱已存在，請重新輸入!!!